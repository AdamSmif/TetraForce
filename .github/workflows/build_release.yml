name: Publish Release

on:
  release:
    types:
      - created
  workflow_dispatch: {}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: get_tag
        name: Get Tag
        env:
          GITHUB_HEAD_REF: $${{ github.head_ref }}
          GITHUB_BASE_REF: ${{ github.base_ref }}
        run: |
          if [ "${{ github.event.inputs.version }}" = "" ]
          then
            TAG=$(jq --raw-output '.release.tag_name' $GITHUB_EVENT_PATH)
          else
            TAG=${{ github.event.inputs.version }}
          fi
          
          echo $TAG > semantic.version
          
          echo ::set-output name=TAG::$TAG
      - name: Build Godot Project
        id: build
        uses: josephbmanley/build-godot-action@v1.4.0
        with:
          name: TetraForce
          preset: linux
          projectDir: '.'
          debugMode: 'true'
      - name: Get Docker Repo Name
        id: find_repo
        run: |
          REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo ::set-output name=REPO::$REPO
      - name: Push Tag to GitHub Package
        uses: opspresso/action-docker@master
        with:
          args: --docker
        env:
          USERNAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY: "docker.pkg.github.com/${{ steps.find_repo.outputs.REPO }}"
          BUILD_PATH: "."
          DOCKERFILE: "Dockerfile"
          IMAGE_NAME: "tetraforce"
          TAG_NAME: ${{ steps.get_tag.outputs.TAG }}
          LATEST: "true"
  godot:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux, osx, win32, win64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure
        env:
          PLATFORM: ${{ matrix.platform }}
        run: |
          if [ "$PLATFORM" = "win32" ] || [ "$PLATFORM" = "win64" ] ; then
            echo "::set-env name=EXPORT_SUFFIX::.exe"
          fi
      - name: Build
        id: build
        uses: josephbmanley/build-godot-action@v1.4.0
        with:
          name: TetraForce${{ env.EXPORT_SUFFIX }}
          preset: ${{ matrix.platform }}
          projectDir: '.'
      - name: Ship to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: tetraforce-releases-production-us-east-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
          SOURCE_DIR: ${{ steps.build.outputs.build }}
          DEST_DIR: builds/master/latest/${{ matrix.platform }}/

